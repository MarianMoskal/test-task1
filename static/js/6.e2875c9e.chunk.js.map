{"version":3,"sources":["styles/PostView.module.css","styles/Post.module.css","services/getPosts.jsx","components/Post.jsx","views/PostsView.jsx"],"names":["module","exports","getPosts","a","fetch","response","ok","Error","json","getPostsByUserId","id","data","length","Post","props","title","body","className","paragraf","PostsView","useState","posts","setPosts","postsById","setPostsById","useEffect","then","r","catch","error","console","message","handleSubmit","e","preventDefault","target","value","alert","reset","onSubmit","TextField","type","label","variant","size","margin","Button","postsContainer","map","post"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,eAAiB,mC,oBCAnED,EAAOC,QAAU,CAAC,SAAW,yB,oICDdC,I,2EAAf,4BAAAC,EAAA,sEACyBC,MACrB,wDAFJ,WACQC,EADR,QAKgBC,GALhB,sBAMU,IAAIC,MAAM,SANpB,gCAQSF,EAASG,QARlB,4C,+BAWeC,E,8EAAf,WAAgCC,GAAhC,iBAAAP,EAAA,sEACyBC,MAAM,qDAAD,OAC2BM,IAFzD,WACQL,EADR,QAKgBC,GALhB,sBAMU,IAAIC,MAAM,SANpB,uBASqBF,EAASG,OAT9B,UAWsB,KAFdG,EATR,QAWWC,OAXX,uBAYU,IAAIL,MAAJ,uBAA0BG,EAA1B,eAZV,iCAcSC,GAdT,6C,oECTe,SAASE,EAAT,GAA+C,IAAD,IAA9BC,MAASJ,EAAqB,EAArBA,GAAIK,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,KACjD,OACE,gCACE,mCACIN,EADJ,KACUK,KAEV,mBAAGE,UAAWC,WAAd,SAAyBF,OCFhB,SAASG,IACtB,MAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAkCF,mBAAS,MAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WAIR,OAHAvB,IACGwB,MAAK,SAACC,GAAD,OAAOL,EAASK,MACrBC,OAAM,SAACC,GAAD,OAAWC,QAAQD,MAAMA,EAAME,YACjC,WACL7B,OAED,IAEH,IAAM8B,EAAY,uCAAG,WAAOC,GAAP,SAAA9B,EAAA,sDACnB8B,EAAEC,iBAIFzB,EAFWwB,EAAEE,OAAOzB,GAAG0B,OAGpBV,MAAK,SAACL,GAAD,OAAWG,EAAaH,MAC7BO,OAAM,SAACC,GAAD,OAAWQ,MAAMR,EAAME,YAEhCE,EAAEE,OAAOG,QATU,2CAAH,sDAYlB,OACE,qCACE,uCAEA,uBAAMC,SAAUP,EAAhB,UACE,oBAAIf,UAAWF,QAAf,qCACA,cAACyB,EAAA,EAAD,CACEC,KAAK,SACL/B,GAAG,KACHgC,MAAM,4BACNC,QAAQ,WACRC,KAAK,QACLC,OAAO,WACN,IACH,uBACA,cAACC,EAAA,EAAD,CAAQL,KAAK,SAASE,QAAQ,YAAYC,KAAK,SAA/C,qBAKF,qBAAK3B,UAAW8B,iBAAhB,SACGxB,EACGA,EAAUyB,KAAI,SAACC,GAAD,OAAU,cAACpC,EAAD,CAAoBC,MAAOmC,GAAhBA,EAAKvC,OACxCW,GAASA,EAAM2B,KAAI,SAACC,GAAD,OAAU,cAACpC,EAAD,CAAoBC,MAAOmC,GAAhBA,EAAKvC","file":"static/js/6.e2875c9e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PostView_title__2_VPz\",\"postsContainer\":\"PostView_postsContainer__1_gO1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paragraf\":\"Post_paragraf__25n-X\"};","async function getPosts() {\n  const response = await fetch(\n    \"https://jsonplaceholder.typicode.com/posts?_limit=10\"\n  );\n\n  if (!response.ok) {\n    throw new Error(\"Error\");\n  }\n  return response.json();\n}\n\nasync function getPostsByUserId(id) {\n  const response = await fetch(\n    `https://jsonplaceholder.typicode.com/posts?userId=${id}`\n  );\n\n  if (!response.ok) {\n    throw new Error(\"Error\");\n  }\n\n  const data = await response.json();\n\n  if (data.length === 0) {\n    throw new Error(`User with id:${id} not found`);\n  }\n  return data;\n}\n\nexport { getPosts, getPostsByUserId };\n","import { paragraf } from \"../styles/Post.module.css\";\n\nexport default function Post({ props: { id, title, body } }) {\n  return (\n    <div>\n      <h3>\n        #{id}. {title}\n      </h3>\n      <p className={paragraf}>{body}</p>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { getPosts, getPostsByUserId } from \"services/getPosts\";\nimport { title, postsContainer } from \"../styles/PostView.module.css\";\nimport { TextField, Button } from \"@mui/material\";\nimport Post from \"components/Post\";\n\nexport default function PostsView() {\n  const [posts, setPosts] = useState(null);\n  const [postsById, setPostsById] = useState(null);\n\n  useEffect(() => {\n    getPosts()\n      .then((r) => setPosts(r))\n      .catch((error) => console.error(error.message));\n    return () => {\n      getPosts();\n    };\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const id = e.target.id.value;\n\n    getPostsByUserId(id)\n      .then((posts) => setPostsById(posts))\n      .catch((error) => alert(error.message));\n\n    e.target.reset();\n  };\n\n  return (\n    <>\n      <h2>Posts</h2>\n\n      <form onSubmit={handleSubmit}>\n        <h3 className={title}>Find posts by user's id</h3>\n        <TextField\n          type=\"number\"\n          id=\"id\"\n          label=\"Enter number from 1 to 10\"\n          variant=\"outlined\"\n          size=\"small\"\n          margin=\"normal\"\n        />{\" \"}\n        <br />\n        <Button type=\"submit\" variant=\"contained\" size=\"medium\">\n          Find\n        </Button>\n      </form>\n\n      <div className={postsContainer}>\n        {postsById\n          ? postsById.map((post) => <Post key={post.id} props={post} />)\n          : posts && posts.map((post) => <Post key={post.id} props={post} />)}\n      </div>\n    </>\n  );\n}\n"],"sourceRoot":""}